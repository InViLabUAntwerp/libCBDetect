name: Build wheels (Ubuntu, macOS & Windows)

on:
  [push, pull_request]

jobs:
  build_wheels:
    name: cibuildwheel âžœ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    env:
      # Skip PyPy builds to keep the matrix lean
      CIBW_SKIP: "pp*"

      # ---- Linux (Ubuntu 22.04) wheels ----
      # Build-time prerequisites with APT (no manylinux container)
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
      CIBW_BEFORE_BUILD_LINUX: |
        yum install -y epel-release && \
        yum install -y opencv opencv-devel

      # Point CMake at the packaged OpenCV files
      CIBW_ENVIRONMENT_LINUX: |
        OpenCV_DIR=/usr/lib/$(uname -m)-linux-gnu/cmake/opencv4

      # ---- Windows wheels ----
      CIBW_ARCHS_WINDOWS: AMD64
      CIBW_BEFORE_BUILD_WINDOWS: >
        powershell -ExecutionPolicy Bypass -Command "
        $ErrorActionPreference = 'Stop';              # fail fast
        $ver  = '4.11.0';
        $exe  = Join-Path $env:TEMP 'opencv.exe';     # C:\Users\...\Temp\opencv.exe
        Invoke-WebRequest -Uri ('https://github.com/opencv/opencv/releases/download/' + $ver + '/opencv-' + $ver + '-windows.exe') -OutFile $exe;
        & $exe /S /D=C:\opencv | Out-Null;            # silent self-extract
        Remove-Item $exe;
        $base = 'C:\opencv';
        $bin  = Join-Path $base 'build\x64\vc16\bin';
        $cfg  = Join-Path $base 'build\x64\vc16\lib';
        $env:OpenCV_DIR = $cfg;                       # visible to this build only
        $env:Path      += ';' + $bin                  # add DLL folder
        "

      # ---- macOS wheels ----
      MACOSX_DEPLOYMENT_TARGET: '14.0'
      CIBW_ENVIRONMENT: 'MACOSX_DEPLOYMENT_TARGET=14.0'
      CIBW_BEFORE_BUILD_MACOS: "brew install opencv"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build tooling
        run: python -m pip install --upgrade pip cibuildwheel==2.23.3 build==1.2.2.post1 wheel==0.45.1

      - name: Build wheels for all platforms
        uses: pypa/cibuildwheel@v2.23.3
        with:
          package-dir: .
          output-dir: wheelhouse

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
